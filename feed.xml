<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title type="text" xml:lang="fa">مهدی صادقی</title>
<link rel="alternate" type="text/html" href="http://mehdix.ir"/>
<link rel="self" type="application/atom+xml" href="http://mehdix.ir/feed.xml"/>
<updated>2017-10-01T23:53:30Z</updated>
<id>urn:uuid:1e7d9dd8-29e4-475d-adc5-17494fb80445</id>
<author>
  <name>Mehdi Sadeghi</name>
  <uri>http://mehdix.ir</uri>
  <email>sadeghi@mehdix.org</email>
</author>
<rights>Commons Attribution 4.0 International</rights>

  <entry>
    <title>درگذشت اشکان قاسمی</title>
    <link rel="alternate" type="text/html" href="http://mehdix.ir/rip-ashkan.html"/>
    <id>urn:uuid:347fa7f0-0ab0-4b47-8bd7-0b6ebd5af720</id>
    <updated>2017-10-01T00:00:00Z</updated>
    <category term="تهران‌لاگ"/><category term="اشکان"/>
    <content type="html">
      <![CDATA[<div dir="rtl"><p>اشکان قاسمی از بنیانگذاران و بچه‌های قدیمی گروه کاربران لینوکس تهران روز گذشته <a href="https://jadi.net/2017/10/ashkan-ghasemi/">فوت کرد</a>.</p>

<p>خبر بسیار تکاندهنده‌ای بود و هنوز هم بعد از ساعتها حالم گرفته است. من اشکان رو بار اول شش هفت سال پیش در جلسه تهران لاگ ملاقات کردم. بعدها هم چند مورد در نامه‌نگاری‌های میلینگ‌لیست لاگ تهران پیامهاش رو خوندم. تلاشش برای برگزاری دائم جلسات تهران لاگ تحسین‌برانگیز بود. من در تجربه کوتاهم با او، او را آدمی اهل مدارا و آزادیخواه پیدا کردم. مشخص بود که آدمی است اهل مطالعه و باخبر از جریانات مهم دنیا مثل سرمایه‌داری و به نوبه خودش در تلاش برای ایجاد تغییر به نفع یک جامعه باز و عادلانه. با دردسرهای زنده نگه داشتن یک گروه هم آشنا بود و اینکه چطور با آدمهای مختلف و بویژه بعضا کسانی که فضای یک گروه رو مسموم می‌کنند روبرو شد. برنامه jcal رو هم مطابق با فلسفه یونیکس نوشته بود.</p>

<p>آدمهایی که بشه بهشون نزدیک شد و در یک فضای محترمانه باهاشون همکاری کرد غنیمت هستند. آدمهایی که دنبال سوءاستفاده از سایرین نباشند. آدمهایی که دنبال کسب برتری نباشند. آدمهایی که دوست داشته باشند که همه در کنار هم فرصت رشد داشته باشند. به نظرم اشکان چنین آدمی بود و جای او برای عزیزان و دوستانش و بچه‌های لاگ تهران و همفکرانش و بسیاری از ما خالی خواهد ماند.</p>

</div>]]>
    </content>
  </entry>

  <entry>
    <title>کلشوگرام</title>
    <link rel="alternate" type="text/html" href="http://mehdix.ir/clashogram.html"/>
    <id>urn:uuid:0b015a33-96b2-40b1-a40c-ead3ef5346c4</id>
    <updated>2017-09-24T00:00:00Z</updated>
    <category term="بازی"/><category term="کلش"/><category term="تلگرام"/>
    <content type="html">
      <![CDATA[<div dir="rtl"><p>من هر از گاهی به همراه دوستانم در کلنی که داریم کلش بازی می‌کنم. دوست داشتیم که بتوانیم بدون باز کردن بازی جزئیات وارها را دنبال بکنیم. من هم <a href="https://github.com/mehdisadeghi/clashogram/">کلشوگرام</a> را نوشتم که با استفاده از API کلش آو کلنز آخرین اخبار وار را از سرورهای سوپرسل بخواند و روی یک کانال تلگرامی (یا هرجای دیگر) ارسال کند.</p>

<p>هدف از بکارگیری برنامه اینست که بدون باز کردن بازی بتوان اخبار وار را دنبال کرد. خوشبختانه شرکت سوپرسل، تولید کننده بازی کلش آو کلنز، مدتی است دسترسی به بخشی از امکانات بازی را از طریق وب فراهم کرده است. یعنی می‌شود اطلاعات مختلفی را از سرورهای بازی از طریق برنامه‌نویسی دریافت کرد. یکی از این موارد وارلاگ یک کلن است، البته به شرط آنکه وارلاگ را عمومی کرده باشید. کلن ما (YVL0C8UY) وارلاگش معمولا باز است. بنابراین کافیست برنامه‌ای بنویسیم که این سرویس را به طور مرتب مانیتور کند و تغییرات را گزارش کند.</p>

<p>من برنامه‌ای با پایتون نوشتم که هر چند دقیقه سرویس وارلاگ را صدا می‌کند و اگر حمله‌ی جدیدی انجام شده باشد یک پیام از طریق تلگرام به یک کانال ارسال می‌کند. البته لازم نیست لزوما تلگرام باشد. می‌تواند پیام را به هرجای دیگری هم بفرستد.</p>

<p>نحوه بکارگیری ولی قدری زحمت دارد. اول باید مقدمات زیر را فراهم کرد:</p>

<ul>
  <li>اول باید  یک اکانت دولوپر در ‬<a href="https://developer.clashofclans.com/#/account">پورتال توسعه‌دهندگان</a> ساخت.</li>
  <li>بعد یک توکن در همان سایت بسازید.  برای اینکار باید آپی پی معتبر خودتان را <a href="http://whatismyipaddress.com">بدانید</a>.</li>
  <li>گام بعدی ساخت یک بات تلگرام به کمک <a href="https://telegram.me/BotFather">بات‌فادر</a> است.</li>
  <li>بعد باید بات تلگرامی که ساختیم را به یک گروه تلگرامی که قصد داریم پیامها را به آنجا بفرستیم به عنوان مدیر اضافه کنیم.</li>
  <li>لاگ کلن خودتان را باز کنید.</li>
  <li>تگ کلن را یادداشت کنید.</li>
</ul>

<p>توضیح کوتاهی هم در مورد موارد بالا بدهم. آی پی باید ثابت باشد چون برای ساخت توکن باید یک آی پی وارد کنید و سرور سوپرسل فقط به درخواستهایی که از آن آی‌پی بیایند جواب خواهد داد. ناگفته پیداست که اگر قصد اجرای برنامه در خانه را دارید احتمالا باید چند روز یکبار توکن را مجددا بسازید چون آی‌پی‌های خانگی معمولا متغیر هستند. علت ادمین کردن بات در کانال هم به این خاطر است که فقط باتهای ادمین قادر به ارسال پیام هستند.</p>

<p>با این توضیحات می‌توان برنامه را نصب و اجرا کرد. اگر با پایتون آشنا هستید که خیلی راحت است. باید پایتون ۳ را نصب داشته باشید:</p>

<pre dir="ltr"><code class="language-bash">$ pip install clashogram
</code></pre>

<p>بعد از نصب می‌توانیم برنامه را با وارد کردن اطلاعاتی که پیشتر جمع‌آوری کرده‌ایم اجرا کنیم:</p>

<pre dir="ltr"><code class="language-bash">$ LANGUAGE=fa_IR clashogram --coc-token &lt;COC_TOKEN&gt; --clan-tag &lt;CLAN_TAG&gt; --bot-token &lt;TELEGRAM_BOT_TOKEN&gt; --channel-name &lt;TELEGRAM_CHANNEL_NAME&gt;
</code></pre>

<p>برای نمونه پیامهای <a href="https://t.me/iranclanwars">کانال کلن ایران</a> را ببینید.</p>

<p>کد برنامه را سعی کردم تمیز بنویسم و تعداد قابل توجهی هم تست ضمیمه برنامه کرده‌ام. هدفم این بود که کد خوانا و ساده باشد تا اگر کسی دوست داشت بتواند آنرا توسعه بدهد. به روال همیشه کد برنامه را در گیت‌هاب <a href="https://github.com/mehdisadeghi/clashogram/">منتشر</a> کرده‌ام.</p>

</div>]]>
    </content>
  </entry>

  <entry>
    <title>تولید فرمولهای زیبای ریاضی در وب</title>
    <link rel="alternate" type="text/html" href="http://mehdix.ir/react-mathjax-preview.html"/>
    <id>urn:uuid:335ef169-0331-4ae5-a1f0-bc775412e798</id>
    <updated>2017-09-18T00:00:00Z</updated>
    <category term="react"/><category term="mathjax"/><category term="ریاضی"/><category term="فرمول"/>
    <content type="html">
      <![CDATA[<div dir="rtl"><p>از چندی پیش تصمیم گرفته‌ام همینطور که مشغول برنامه‌نویسی هستم قطعات کوچک کارهای خودم را به صورت پکیج قابل استفاده مجدد منتشر کنم. امروز یک کامپوننت کوچک React نوشتم.</p>

<p>چند وقتی است درگیر نمایش فرمولهای ریاضی در یک پروژه React هستم. <a href="https://facebook.github.io/react/">React</a> یک پروژه اوپن سورس از طرف شرکت فیسبوک است. وبسایتها یا اپ‌هایی که با این تکنولوژی ساخته می‌شوند از قسمت‌های کوچکی بنام Component تشکیل می‌شوند. هر کامپوننت State خودش را دارد و بخش مجزایی از برنامه را به اصطلاح «رِندر» می‌کند. React هم همواره گوش به زنگ تغییر State است و با هر تغییر از همه کامپوننت‌ها می‌خواهد که خودشان را بروز کنند. البته هر کامپوننت خودش تصمیم می‌گیرد که بروز بشود یا نه.</p>

<p>به همین معرفی کوتاه از React بسنده می‌کنم و می‌روم سراغ کامپوننت خودم. در میان محققان سه روش رایج برای مکتوب کردن فرمولهای ریاضی وجود دارد. TeX و ASCIImath و MathML. در این میان TeX از همه معروف‌تر و پرکاربردتر است. MathML هم یک استاندارد مبتنی بر XML است که برای تایپ توسط آدمها ساخته نشده و بیشتر برای هضم توسط برنامه‌ها و مرورگرها بوجود آمده است. ولی مرورگرها به درستی از آن پشتیبانی نمی‌کنند. در اینترنت پروژه اوپن سورس خوب دیگری وجود دارد بنام MathJax. این پروژه که با جاوااسکریپت نوشته شده می‌تواند هر سه فرمتهای بالا را بپذیرد و خروجی زیبا و قابل نمایش در مرورگر اینترنت بازدید کننده تولید بکند. اهمیت این پروژه در اینست که می‌تواند بسته به نوع و نسخه مرورگر بازدید کننده خروجی مناسب تولید کند. حالا یا با تولید کد MathML یا توسط استایل‌گذاری با CSS و HTML خالص. لازم به ذکر است که هیچ مرورگری قادر به نمایش ASCIImath و TeX نیست. در پشتیبانی از MathML هم بین علما اختلاف است!</p>

<p>حالا کامپوننت ما این وسط چکاره است؟ مشکل من این بود که نمی‌توان <a href="https://www.mathjax.org/">MathJax</a> را به صورت خام در یک پروژه React بکار برد و باید برایش یک کامپوننت نوشت که با توجه به Life Cycle کامپوننت React در زمان مناسب عمل رِندر کردن خروجی را انجام بدهد. (از توضیح Life Cylce می‌گذریم!) من هم بجای اینکه در لابلای کد پروژه خودم اینکار را انجام بدهم برایش یک کامپوننت بنام <code dir="ltr">react-mathjax-preview</code> نوشتم و روی npmjs <a href="https://www.npmjs.com/package/react-mathjax-preview">منتشر</a> کرده‌ام. در یک پروژه جاوااسکریپت می‌توان آنرا به شیوه زیر نصب کرد:</p>

<pre dir="ltr"><code>$ npm install react-mathjax-preview
</code></pre>

<p>برای استفاده از هم کافی است پکیج را ایمپورت کنید و رشته حاوی کدهای ریاضی را به آن بدهید:</p>

<pre dir="ltr"><code class="language-js">import React, {Component} from 'react'
import {render} from 'react-dom'
import MathJax from 'react-mathjax-preview'

const math = String.raw`

  $$\lim_{x \to \infty} \exp(-x) = 0$$`

class Demo extends Component {
  constructor(props) {
    super(props);
    this.state = {
      math: tex
    }
  render() {
    return &lt;MathJax math={this.state.math} /&gt;
  }
}
</code></pre>

<p>همراه سورس برنامه یک دموی کوچک هم هست که به روش زیر می‌توانید اجرا کنید:</p>

<pre dir="ltr"><code>git clone https://github.com/mehdisadeghi/react-mathjax-preview &amp;&amp; cd react-mathjax-preview
npm install
npm run start
</code></pre>

<p>اگر با مرورگر لوکال‌هاست پورت ۳۰۰۰ را باز کنید خروجی باید چیزی شبیه عکس زیر باشد:</p>

<p class="center"><img src="assets/pimg/mathjax-preview.png" alt="" /></p>

<p>طبق روال همیشه ‬<a href="https://github.com/mehdisadeghi/react-mathjax-preview">سورس</a> برنامه روی گیت‌هاب است.</p>

</div>]]>
    </content>
  </entry>

  <entry>
    <title>انتشار قالب جکیلِ وبسایت</title>
    <link rel="alternate" type="text/html" href="http://mehdix.ir/jekyll-theme.html"/>
    <id>urn:uuid:8a6802dc-3e8f-4ba4-8c0e-c4b1a1d70db1</id>
    <updated>2017-09-17T00:00:00Z</updated>
    <category term="جکیل"/><category term="روبی"/>
    <content type="html">
      <![CDATA[<div dir="rtl"><p>طی چند سالی که از تاسیس این وبسایت با بکارگیری جکیل می‌گذرد، هر از چندگاهی کسی در مورد نحوه راه‌اندازی وبسایت سوالی می‌پرسد. من هم تصمیم گرفتم برای ساده کردن کار خودم و دیگران وبسایت را به صورت قالب جکیل منتشر کنم.</p>

<p>زمانی که برای اولین بار این وبسایت را با جکیل ساختم هنوز جکیل از بکارگیری قالب برای وبسایت پیشیبانی نمی‌کرد. اما اکنون می‌توان یک قالب را به همراه پلاگین‌ها و <em>Layout</em>هایش در یک جم روبی بسته‌بندی کرده و در سایتهای دیگر بکار برد. نام این قالب را <em>jekyll-theme-mehdix-rtl</em> گذاشتم. می‌توان آنرا از گیت‌هاب دریافت کرد:</p>

<pre dir="ltr"><code>git clone https://github.com/mehdisadeghi/jekyll-theme-mehdix-rtl
</code></pre>

<p>صرفا جهت مشاهده قالب یه وبسایت مینیاتوری هم درون این مخزن وجود دارد که می‌توان آنرا به سبک متعارف پروژه‌های روبی اجرا کرد:</p>

<pre dir="ltr"><code>$ bundle install # Install the dependencies
$ jekyll serve # or bundle exec jekyll serve
</code></pre>

<p>اگر در حال حاضر یک وبسایت جکیل دارید می‌توانید با اضافه کردن خطوط زیر به فایل کانفیگ جکیل این تم را نصب کنید:</p>

<pre dir="ltr"><code>theme: "jekyll-theme-mehdix-rtl"
</code></pre>

<p>درون <em>Gemfile</em> هم باید خطوط زیر را اضافه کرده باشید:</p>

<pre dir="ltr"><code>source "https://rubygems.org"
gem "jekyll", "3.5.2"
gem "jekyll-theme-mehdix-rtl", "0.1.1"
</code></pre>

<p>این قالب ویژگی‌های زیر را داراست:</p>

<ul>
  <li>نمایش جلالی تاریخ‌ها</li>
  <li>صفحه جداگانه برای برچسب‌ها</li>
  <li>دارای یک چیدمان مینیمال (<em>minimal</em>) برای صفحه اصلی</li>
</ul>

<p>قالب را روی روبی‌جمز ‏<a href="https://rubygems.org/gems/jekyll-theme-mehdix-rtl">منتشر</a> کرده‌ام. و از همانجا هم مستقیما قابل نصب است. برای جزئیات بیشتر ‏<a href="http://github.com/mehdisadeghi/jekyll-theme-mehdix-rtl">سورس قالب</a> یا <a href="http://github.com/mehdisadeghi/mehdix.ir">سورس همین وبسایت</a> را مشاهده کنید.</p>

</div>]]>
    </content>
  </entry>

  <entry>
    <title>راست به چپ نویسی در گیتهاب</title>
    <link rel="alternate" type="text/html" href="http://mehdix.ir/github-rtl.html"/>
    <id>urn:uuid:32388e64-2c5c-48f2-9eaa-5424df1a763e</id>
    <updated>2017-05-07T00:00:00Z</updated>
    <category term="گیتهاب"/><category term="rtl"/>
    <content type="html">
      <![CDATA[<div dir="rtl"><p>برای اینکه در گیتهاب درست و زیبا فارسی و راست به چپ بنویسیم یک راه حل ساده وجود دارد که در ادامه شرح می‌دهم.</p>

<p>گیتهاب به صورت پیشفرض امکانی برای راست به چپ کردن متن ورودی ندارد. بنابراین متن‌های فارسی را هم مثل انگلیسی چپ به راست نمایش می‌دهد که انصافا خیلی بدشکل می‌شود.</p>

<p class="center"><img src="assets/pimg/github-ltr.jpg" alt="&quot;&quot;" title="یک کامنت گیتهاب در حالت عادی" /></p>

<p>اما خوشبختانه گیتهاب از تگ‌های HTLM برای افزودن استایل به متن پشتیبانی می‌کند. بنابراین به شکل زیر می‌توان فارسی نوشت:</p>

<pre dir="ltr"><code>&lt;div dir="rtl"&gt;
متن کامنت با فرمت مارک‌داون
&lt;/div&gt;
</code></pre>
<p>همینکار را در نوشتن فایل‌های README می‌توان انجام داد.</p>

<p class="center"><img src="assets/pimg/github-rtl.jpg" alt="&quot;&quot;" title="همان کامنت گیتهاب با تکنیک بالا" /></p>

<p>از جایی که من دوست دارم همه کارها را خودکار کنم تصمیم گرفتم یک اسکریپت <a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo">Tampermonkey</a> بنویسم که یک دگمه به نوارابزار گیتهاب اضافه کند که موقع کامنت با فشار دادن آن همان چند خط کپی بشود در جعبه کامنت! در مورد Tampermonkey هم یک توضیح کوتاه بدهم. این برنامه یک افزونه کروم است، نسخه فایرفاکسش <a href="https://addons.mozilla.org/en-US/firefox/addon/greasemonkey/">Greasemonkey</a> نام دارد. کاری که می‌کند اینست که اسکریپتهایی که شما می‌نویسید یا از بین مجموعه اسکریپت‌های موجود انتخاب می‌کنید روی دامنه‌ها و سایت‌های خاصی پیاده می‌کند. یعنی مثل یک فیلتر عمل می‌کند. یعنی بعد از اینکه محتوای سایت از سرور دانلود شد یکبار آنرا از درون اسکریپت عبور می‌دهد و خروجی را به ما نمایش می‌دهد. به این ترتیب هر اسکریپت می‌تواند سایت را بخواند و در آن تغییراتی ایجاد کند.</p>

<p>حالا با این توضیح کوتاه برویم سروقت اسکریپت. خوشبختانه متوجه شدم که قبلا <a href="https://github.com/Mottie/GitHub-userscripts">Rob Garisson</a> برای گیتهاب <a href="https://greasyfork.org/en/scripts/20542-github-rtl-comment-blocks">اسکریپتی مشابه</a> نوشته است. با این تفاوت که بجای تگ HTML از مارک‌های یونیکد (نشانه‌های یونیکد)  <a href="https://en.wikipedia.org/wiki/Right-to-left_mark"><code dir="ltr">&amp;rlm</code></a> و <a href="https://en.wikipedia.org/wiki/Left-to-right_mark"><code dir="ltr">&amp;lrm</code></a> استفاده کرده که اتفاقا روش حرفه‌ای‌تری به نظر می‌رسد. تنها عیبش اینست که تا صفحه ریفرش نشود متن همچنان چپ به راست نمایش داده می‌شود. به همین خاطر من از تگ‌های HTML استفاده کردم. اگر تمپرمانکی را نصب کرده باشید با مراجعه به <a href="https://greasyfork.org/en/scripts/20542-github-rtl-comment-blocks">صفحه برنامه</a> می‌توانید این اسکریپت را نصب کنید.</p>

<p class="center"><img src="assets/pimg/ce7d1070-3327-11e6-91bd-403e75e679bd.gif" alt="&quot;Photo: Rob Garrison&quot;" title="Photo: Rob Garrison" /></p>

<p class="image-caption"><em>Photo: Rob Garrison</em></p>

<p>به امید اینکه درست‌تر و زیباتر بنویسم!</p>

</div>]]>
    </content>
  </entry>

  <entry>
    <title>باگ سیزده ساله تعمیر شد</title>
    <link rel="alternate" type="text/html" href="http://mehdix.ir/13-years-old-bug-fixed.html"/>
    <id>urn:uuid:4b4fa077-5001-41b2-bdb3-f9f9638efdb2</id>
    <updated>2017-04-08T00:00:00Z</updated>
    <category term="gtk"/><category term="gnome"/><category term="باگ"/><category term="همکاری"/><category term="پیگیری"/>
    <content type="html">
      <![CDATA[<div dir="rtl"><p>در مطلب قبلی در مورد باگ GTK و تلاشم برای مرج کردن آن نوشته بودم. الان قصد دارم نتیجه‌ی چند ماه دوندگی و همکاری آنلاین را بنویسم.</p>

<p>ماجرا به طور خلاصه این بود که من از مدتها پیش موقع تایپ فارسی در <code dir="ltr">gedit</code> و <code dir="ltr">zim</code> متوجه شده بودم که اگر کلید کنترل را نگه دارم و به چپ و راست حرکت کنم، نشانگر تایپ در جهت عکس حرکت می‌کند. مثل خیلی از آدم‌ها من هم منتظر شدم تا باگ توسط کس دیگری رفع بشود ولی نشد. در مرحله بعدی سعی کردم مشکل را پیدا و گزارش کنم که به ‏<a href="https://bugzilla.gnome.org/show_bug.cgi?id=136059">این باگ</a> رسیدم. تاریخ باگ را نگاه کنید، سال ۲۰۰۴ ثبت شده است. آن موقع (سال ۲۰۱۵ یا ۱۳۹۴) کل همت من به نوشتن <a href="https://bugzilla.gnome.org/show_bug.cgi?id=136059#c31">یک کامنت</a> خلاصه شد. اینکه بگویم من هم این مشکل را دارم، بلکه کسی دلش به حالم بسوزد و از وقت خودش بزند و بیاید مشکل من را حل بکند!</p>

<p>خب، ولی کسی دلش نسوخت.</p>

<p>اگر باگ را دنبال کنید مراحل بعدی را خودتان می‌بینید. بعد از گذشت یکسال دوباره همتم را جمع کردم و اینبار تصمیم گرفتم خودم باگ را درست کنم. با صرف چند روز وقت و سرو کله زدن با GTK و C پچی درست کردم و باگ را با حل کردم که شرحش را در مطلب قبلی آوردم. ولی مهمترین قسمت کار دنبال کردن باگ است. اگر به کامنت‌ها نگاه کنید و به کسانی که باگ‌های مشابه را ثبت کرده‌اند یا این باگ را دنبال کرده‌اند، متوجه می‌شوید که بیشتر افراد آن را دنبال نمی‌کنند و فیدبک نمی‌دهند. کامنت‌های حاوی اطلاعات روشن و مورد نیاز هم کم است. یعنی افراد (مثل خود من قبلا) کامنت می‌گذارند ولی کامنتشان کم ارزش است چون حاوی اطلاعات به درد بخور نیست و کاری هم برای آن انجام نشده است. ولی اگر کسی برنامه را تست بکند و فیدبک بدهد یا پچ را امتحان بکند و خلاصه به طریقی به پیشرفت پروسه‌ی رفع باگ کمک بکند کارش با ارزش است، در غیر اینصورت کسی توجهی به کامنتش نمی‌کند. و احتمالا جوابی هم دریافت نمی‌کند. در این مورد خواندن مقاله‌ی اریک ریموند بسیار سودمند است. اینکه <a href="http://www.catb.org/esr/faqs/smart-questions.html">چطور از هکرها هوشمندانه سوال بپرسیم</a>. جان کلام اینست که پیام باید نشانگر تلاش سوال کننده در جهت حل مشکل باشد (باید مشق شب خودت را انجام داده باشی)، گویا باشد، طلبکارانه نباشد و برای وقت پاسخ‌دهندگان ارزش قائل باشد. در ضمن باید گفتگو را دنبال کرد و در صورت نیاز با اطلاعات دوباره آن را بروزرسانی کرد. اگر پرسشی پرسیده شده باید به سرعت و دقت پاسخ داده بشود و مانند اینها.</p>

<p>در نهایت بعد از گذشت چند ماه و پیگیری دائمی و رد و بدل کردن چندین و چند پچ و مشارکت عده‌ای از برنامه‌نویسان GTK بالاخره ‬<a href="https://git.gnome.org/browse/gtk+/commit/?id=0128b8d33f47c9387ee342a1158f3038e02eff49">پچ نهایی</a> در مخزن اصلی مرج شد و باگ مورد بحث بعد از گذشت ۱۳ سال فیکس شد. در این مدت دوستم آیدین غریب‌نواز به عنوان کاربر RTL با تست پچ صحت آن را تایید کرد و کامنت گذاشت و دو نفر از برنامه‌نویسان GTK بنام Daniel Bolse و Nelson Benítez León همکاری زیادی برای تولید پچ نهایی کردند.</p>

<p>به این صورت بعد از مدتی اندک اندک با ریلیزهای بعدی گنوم و GTK این پچ منتشر می‌شود و دیستروها هم در نسخه‌های بعدی‌شان آنرا دریافت خواهند کرد. نکته مهمی که طی فرآیند تعمیر این باگ فهمیدیم این بود که از سیزده سال پیش تا به امروز GTK تغییرات زیادی کرده است و این باگ به تنهایی مشکل gedit را حل نمی‌کند چرا که امروز gedit دیگر از GtkTextView (که تعمیرش کردیم) برای نمایش متن استفاده نمی‌کند و بجای آن از یک ویجت دیگر بنام GtkSourceView استفاده می‌کند. بنابراین در تاریخ ۱۹ فوریه ۲۰۱۷ (اوایل اسفند ۹۵) <a href="https://bugzilla.gnome.org/show_bug.cgi?id=778928">باگ جدیدی</a> ثبت کردم و کار را روی آن شروع کردیم. با کسب تجربه از پیچیدگی‌های باگ قبلی و فرآیند حل آن اینبار با سرعت وارد عمل شدیم (یعنی یکی دو ماه!). هم من یاد گرفته بودم چطور با بچه‌های GTK کار کنم و هم آنها با مشکل راست به چپ نویسی آشنا شده بودند. (مثلا دانیل یاد گرفته بود که خودش متن عربی را تست بکند.)  اول فکر می‌کردیم که باید API ویجت GtkTextView را تغییر بدهیم و همان توابع را در GtkSourceView استفاده کنیم که با واکنش منفی یکی دیگر از برنامه‌نویسان روبرو شد و درخواست کرد که اول تلاش کنیم مشکل را درون GtkSourceView حل کنیم و بار اضافی نگهداری از یک API جدید را به پروژه تحمیل نکنیم. خوشبختانه با مقداری تلاش و همفکری دوستان به <a href="https://bugzilla.gnome.org/attachment.cgi?id=348936&amp;action=diff">پچ جدیدی</a> رسیدیم، حتی خیلی بهتر از پچی که برای GtkTextView نوشته بودیم! پچ به قدری ساده بود که کارها خیلی زود پیش رفت. طبق معمول دوستان اصلاحاتی پیشنهاد کردند که اعمال کردم. مثلا اینکه متن کامیت باید شامل لینک باگزیلا باشد، خط اول آن باید فیکس را شرح بدهد و در بدنه کامیت هم شرح مشکل آمده باشد و در خط آخر هم لینک باگزیلا. خود کد هم باید قواعد رایج GTK و خود ویجت را رعایت کند. مثل تعریف متغیرها در ابتدای کد و استفاده از آکولاد حتی برای بلاک‌های تک خطی و مانند اینها. آزاد کردن اشاره‌گرهای سی هم فراموش نشود!</p>

<p>با این اوصاف باگ دوم بجای سیزده سال در  کمتر از دو ماه حل شد. حتما تصدیق می‌کنید که پیشرفت قابل توجهی است! پچ حلال مشکلات ما را هم می‌توانید در مخزن GTK ‬<a href="https://git.gnome.org/browse/gtksourceview/commit/?id=494c76dd359351b8a703b6aec328126b0f84828b">ببینید</a>. من که بی صبرانه منتظرم تا آرچ لینوکسم را آپدیت بکنم و از این به بعد هرچقدر دلم می‌خواهد در متن‌های فارسی با کنترل و کلیدهای جهت کیبورد به چپ و راست بروم! واقعا چه لذتی از این بالاتر؟ :)</p>

<p>این هم عیدی من به کامیونتی راست به چپ نویسان گنوم باز ایران!</p>
</div>]]>
    </content>
  </entry>

  <entry>
    <title>پچ بنویس و التماس کن</title>
    <link rel="alternate" type="text/html" href="http://mehdix.ir/patch.html"/>
    <id>urn:uuid:e2cb01d2-b3ff-4f99-8402-b47613c36cb4</id>
    <updated>2017-01-29T00:00:00Z</updated>
    <category term="پچ"/><category term="سازوکار"/><category term="gtk"/><category term="gnome"/><category term="گنوم"/><category term="مشارکت"/>
    <content type="html">
      <![CDATA[<div dir="rtl"><p>مدتها بود که مشکلی با برنامه‌های گرافیکی مبتنی بر GTK داشتم. آخرسر همت کردم خودم مشکل رو اصلاح کنم. ولی به زودی فهمیدم اصلاح مشکل ساده‌تر از قبولاندن پچ به نگهدارندگان پروژه است.</p>

<p>اول مقداری قصه. هر برنامه گرافیکی از کتابخانه‌هایی برای ساختن رابط کاربری‌اش استفاده می‌کنه. در دنیای ویندوز خیلی‌ها از دات‌نت استفاده می‌کنند. اما کلی پروژه دیگر هم هست که قطعات گرافیکی قابل استفاده در برنامه‌ها رو ساختند و قابل استفاده هستند. در دنیای نرم‌افزار آزاد رایج‌ترین تولکیت‌های گرافیکی GTK و Qt هستند. اولی در گنوم به طور گسترده استفاده شده و دومی در KDE. اگر از دسکتاپ‌های شبیه به گنوم استفاده کنیم، چه نسخه سه چه قدیمی‌تر و چه سایر دسکتاپهایی که فورکی از گنوم هستند اکثر برنامه‌های گرافیکیشون با GTK نوشته شده. مثلا برنامه gedit و Zim که من ازشون روزانه استفاده می‌کنم با این تولکیت نوشته شده‌اند.</p>

<p>حالا مقداری در مورد روال توسعه این برنامه‌ها. در گذشته‌ها که فقط از دور اسم پروژه‌های نرم‌افزار آزاد رو در ایران می‌شنیدم به هر کدام از اونها یا شاید به همشون یکجا مثل یک مدینه‌ی فاضله فکر می‌کردم. تصور اینکه برنامه‌هایی توسط هکرها برای آزادی ما از دست شرکت‌های خبیث نوشته شده! علت جذابیت خاص این مفاهیم شاید زندگی و رشد و نمو در کشوری انقلابی و تغذیه فکری از محصولات فکری نویسندگان معاصر خودمون بود که همگی در این جو زندگی کرده بودند. در مقیاسی بزرگتر هم اونها هم خودشون از  جنبش‌های چپ قرب بیستم تاثیر پذیرفته بودند.</p>

<p>بنابراین با این پیشفرض‌ها فکر می‌کردم که هر برنامه‌ی آزادی از هر نوع فعالیت داوطلبانه حمایت می‌کنه. ولی متاسفانه کم کم به این نتیجه رسیدم که مدینه‌ی فاضله‌ای در کار نیست و جوامع آنلاینی که حول برنامه‌های شکل می‌گیرند بیشتر نه بر اساس ایدئولوژی بلکه بر اساس نیاز به یک راه حل برای یک مشکل بوجود اومدند. مهمترین چیزی که یاد گرفتم اینه که بیشتر برنامه‌های مهم توسط هکرهای مستقل توسعه داده نمی‌شن بلکه برعکس بیشترشون توسط شرکت‌هایی توسعه داده می‌شن که از اون برنامه به طریقی پول درمیارن. این کار رو برای یک هکر مستقل سخت می‌کنه. جلوتر توضیح می‌دم چرا.</p>

<p>برگردیم سر مشکل من با GTK. من موقع تایپ فارسی در gedit و Zim متوجه شدم که وقتی کلید کنترل رو با یا بدون شیفت پایین می‌گیریم تا با کلیدهای جهت لغت به لغت در متن حرکت کنیم، جهت حرکت نشانگر تایپ بر خلاف انتظار ما برعکس جهت فشرده شدن کلیدهاست. مثلا همین الان امتحان کنید. اگر کلید جهت سمت راست رو فشار بدین نشانگر می‌ره سمت چپ و برعکس. از جایی که من به دفعات موقع تایپ از این قابلیت استفاده می‌کنم دنبال علت مشکل گشتم. مثلا متوجه شدم در فایرفاکس و کروم این مشکل نیست. مثلا در باکس نوشتن ایمیل جدید داخل جیمیل این مشکل وجود نداره. علت اینه که کروم و فایرفاکس از Webkit استفاده می‌کنند نه GTK. اول تصمیم گرفت که باگ رو گزارش کنم. بلافاصله متوجه شدم که این مشکلی قدیمی است که <a href="https://bugzilla.gnome.org/show_bug.cgi?id=136059">گزارشی</a>‎ در سال ۲۰۰۳ توسط بهداد اسفهبد که خودش از مشارکت‌کنندگان قدیمی GTK است براش ثبت شده. باگ‌های زیادی هم بعد از اون توسط کاربران فارسی و عرب و عبری زبان برای همین مشکل ثبت شده که همگی ارجاع داده شده‌اند به قدیمی‌ترین باگ. باورتون می‌شه باگی ۱۴ سال در انتظار تعمیر باقی بمونه؟ ولی خب مونده.</p>

<p>من هم کامتنی گذاشتم و یکسال گذشت و خبری نشد و تصمیم گرفتم خودم درستش کنم. کد رو دانلود کردم و شروع کردم به خوندن مستندات پروژه گنوم در مورد GTK. کل پروژه با زبان سی نوشته شده. باید بگم اصلا طوری نوشتن که کاربر تازه‌وارد هیچی نفهمه! اگر خیال می‌کنید که راهنمای درست و حسابی برای مشارکت هست سخت در اشتباهید. حالا این رو هم می‌گم چرا. بالاخره با هزار بدبختی و چند روز وقت گذاشتن و بالا و پایین رفتن در سورس‌فایل‌های چند هزار خطی!! بالاخره مشکل رو فیکس کردم. کلی خوشحال شدم. <a href="https://bug136059.bugzilla-attachments.gnome.org/attachment.cgi?id=343512">پچی ساختم</a> و پیش خودم گفتم الان می‌رم پچ رو سابمیت می‌کنم و کلی فیدبک می‌گیرم و مشکل حل می‌شه، زهی ای خیال باطل!</p>

<p>یه توضیح مختصر بدم که کلیات کار در پروژه‌های مرتبط با گنوم چیه. اول اینکه برای ثبت مشکل از باگ‌زیلا استفاده می‌کنند. برای ارتباط با سایر برنامه‌نویس‌ها هم چند میلینگ لیست دارند. اگر از عالم گیت‌هاب آمده باشید که کارتون ساخته است، چون خبری از پول ریکوئست و <em>Continuious Integration</em> نیست. با دستورات گیت باید یک پج بسازید و بعد پچ رو روی صفحه باگ ارسال کنید. بعدا فهمیدم که اصلا اون فیکس کردن باگ در مقابل مشکلاتی که از اینجا شروع می‌شه هیچه! خلاصه دیگران میان و پچ شما رو ریویو می‌کنند. مثلا اینکه فلان قواعد رو رعایت نکردی، برو بخون و پچ جدید ارسال کن. خلاصه اگر از مرحله ریویو رد بشی یک توسعه دهنده میاد و پچت رو در ریپازیتوری گیت پروژه اعمال می‌کنه.</p>

<p>این روش توسعه در سال ۲۰۱۷ مشکلات جدی‌ای داره. اگر ده یا بیست سال پیش بود مشکلی نبود. ولی امروز این روش به نظر من یک روش ضد مشارکته. اول که خبری از Continious  Integration نیست. یعنی شما پچ رو آپلود می‌کنید ولی هیچ تست اتوماتیکی روی پچ شما اجرا نمی‌شه که مراجعه‌کنندگان بفهمند وضعیت در صورت اعمال این پچ چه خواهد بود. دیگر اینکه شما نمی‌تونید فورک کنید و پول ریکوئست بفرستید. فورک و ارسال پول‌ریکوئست که روش رایج روی گیتهابه تازه‌واردان رو خیلی کمک می‌کنه و مشارکت رو ساده می‌کنه.</p>

<p>ولی مشکل اصلی از نظر من اینه که پروژه‌ی پرکاربردی مثل GTK توسط شرکتی خصوصی اداره می‌شه. یعنی توسعه‌دهندگان اصلی اکثرا کارمندان شرکت‌های ردهت یا گوگل و زوزه هستند. بنابراین علاقه‌ی چندانی به حل مشکل یک کاربر مستقل نشون نمی‌دند مگر اینکه یکی از محصولات خودشون تحت تاثیر این باگ قرار بگیره. من چندین نوبت برای درخواست کمک به کانال چت پروژه مراجعه کردم. حدس زدم که بیشتر افرادی که دائما حاضرند همکارند و بخاطر اینکه مدتهاست روی پروژه کار می‌کنند نیازی به بهبود وبسایت و کمک به هکرهای مستقل ندارند، چون کار خودشون به شیوه فعلی راه می‌افته.</p>

<p>نتیجه‌ای که از مشکلاتی که شرح دادم می‌خوام بگیرم اینه که برای پروژه‌های مستقل مهمه که همکاری کاربران تازه‌کار و هکرهای مستقل رو به خودش جذب کنه. برای اینکار باید مستندات و مثال‌های خوب و گام به گام در وبسایت و از همه مهمتر در خود مخزن گیت پروژه وجود داشته باشه. از پول ریکوئست بجای پچ استفاده بشه و با تست دائمی پچ یا پول‌ریکوئست تا جای امکان به ارسال کننده و دیگران فیدبک داد. در مجموع باید هزینه مشارکت رو به قدری کاهش داد که مقاومتی در ذهن مشارکت‌کننده ایجاد نشه. از طرفی باید یک کامیونیتی به newbie-friendly باشه. یک کامیونیتی باید کاربر تازه‌واردپسند باشه.</p>

<blockquote>
  <p>یک کامیونیتی باید کاربر تازه‌واردپسند باشه.</p>
</blockquote>

<p>در نهایت هم اگر آشنایی با کد سی دارید و یا سرتون برای یک چالش درد می‌کنه برید و پچ من رو ریویو کنید که اگر درست بشه هزاران و شاید میلیون‌ها نفر ازش بهره مند می‌شوند. در ادامه نحوه دریافت و تست پچ رو به اختصار توضیح می‌دم.</p>

<pre dir="ltr"><code>git clone git://git.gnome.org/gtk+
cd gtk+
wget https://bug136059.bugzilla-attachments.gnome.org/attachment.cgi\?id\=343512 -O fix.patch
git apply fix.patch
./autogen
make -j4
cd demos/gtk-demo
./gtk4-demo
</code></pre>
<p>از سایدبار برنامه‌ی دمو باکس متنی Hypertext رو پیدا کنید و داخلش فارسی بنویسید و با gedit روی دستگاه خودتون مقایسه کنید. اگر از نتیجه راضی بودید در صفحه باگ کامنت بذارید که خدا رو خوش بیاد!</p>

</div>]]>
    </content>
  </entry>

  <entry>
    <title>ماژول راست به چپ اوولوشن</title>
    <link rel="alternate" type="text/html" href="http://mehdix.ir/evolution-composer-rtl.html"/>
    <id>urn:uuid:77d98942-0d2e-4ef3-9556-cec59668789b</id>
    <updated>2017-01-01T00:00:00Z</updated>
    <category term="ایمیل"/><category term="rtl"/>
    <content type="html">
      <![CDATA[<div dir="rtl"><p>من برای بخشی از کارم از کلاینت ایمیل ‬‬<a href="https://wiki.gnome.org/Apps/Evolution">اوولوشن</a> استفاده می‌کنم. برای راحتی فارسی‌نویسی برایش یک افزونه نوشتم.</p>

<p>اول کمی مقدمه. اوولوشن کلاینت ایمیل پروژه‌ی گنوم(نوم) است. سابقه این برنامه به سال ۲۰۰۰ میلادی برمی‌گردد. برنامه به زبان C و رابط گرافیکی با Gtk نوشته شده است. امکانات برنامه هم علاوه بر ارسال و دریافت ایمیل شامل بخش‌های تقویم، دفترچه تلفن، کارها و یادداشت‌هاست. کل برنامه در یک پنجره باز می‌شود به جز پنجره ارسال ایمیل و خواندن ایمیل (فقط متن یک ایمیل در پنجره اصلی نمایش داده می‌شود). امکان خواندن و نوشتن ایمیل‌های رمزشده هم در برنامه به صورت توکار تعبیه شده است.</p>

<p>و حالا شرح مشکل. با اینکه اوولوشن کلاینتی قدیمی است ولی هنوز کامپوزر (پنجره نوشتن ایمیل) فاقد امکان راست به چپ کردن ایمیله. یعنی در مود html کلید میانبر یا دگمه‌ای روی نوارابزار برنامه وجود ندارد که متن را راست به چپ بکند. هرچند ویجت پنجره نوشتن ایمیل این قابلیت را دارد چون از <a href="https://webkit.org/project/">WebKit</a>‏ استفاده می‌کند.</p>

<p>و راه حل. خوشبختانه اوولوشن یک مکانیزم دارد برای نوشتن افزونه. من با کمک این مکانیزم برایش یک افزونه نوشتم که دو تا دگمه به نوارابزار کامپوزر اضافه کند. ولی نحوه انجام این کار تقریبا پیچیده بود. چون ویجت وب‌کیت در یک پراسس مجزا کار خودش را انجام می‌دهد (از چون و چرایش اطلاع ندارم ولی احتمالا بخاطر امنیته) بنابراین باید از روش خاصی برای ارتباط با آن استفاده کرد. بعد از مقداری مطالعه مستندات و بازی با یک افزونه‌ی نمونه و طرح سوال روی کانال IRC برنامه بالاخره توانستم افزونه را سرهم کنم. ولی از شرحش در اینجا صرف نظر می‌کنم، فکر نمی‌کنم زیاد به کار کسی بیاید.</p>

<p>افزونه را از گیت‌هاب می‌شود <a href="https://github.com/mehdisadeghi/evolution-composer-rtl">دریافت</a> کرد. اگر اوولوشن روی دستگاه نصب است فقط کافیست برنامه را نصب کنید:</p>

<pre dir="ltr"><code>$ git clone https://github.com/mehdisadeghi/evolution-composer-rtl
$ cd evolution-composer-rtl
$ mkdir src/build
$ cd src/build
$ cmake ..
$ make
$ sudo make install
</code></pre>

<p>ناگفته پیداست که باید cmake روی دستگاه نصب شده باشد.</p>

<p>اما نتیجه‌گیری. توسعه‌ی این برنامه کار سختیه و اصلا کاربرپسند نیست. یعنی هزینه‌ی ورود و شروع بالاست. پیچیدگی برنامه هم زیاده. برای ایجاد یک تغییر کوچک باید کلی مستندات خواند بعد هم سوال پرسید و بعد هم با یک سورس کد پیچیده سر و کله زد و از همه اینها بدتر اینه که روال توسعه‌ی برنامه مبتنی بر ساخت و ارسال پچه. هیچ اشکالی به این کار وارد نیست ولی سرعت شروع را کند می‌کند و کسی حتی اگر بلد باشد یک فیچر را پیاده کند یا باگی را فیکس کند بخاطر این پیچیدگی‌ها از خیرش خواهد گذشت. در ضمن توسعه پروژه روی جایی مثل گیت‌هاب سرعت همکاری و جذب توسعه‌دهنده را زیاد می‌کند.</p>

</div>]]>
    </content>
  </entry>

</feed>
